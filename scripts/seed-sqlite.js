const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const dbPath = path.join(__dirname, '../prisma/dev.db');

// Cr√©er une connexion √† la base de donn√©es
const db = new sqlite3.Database(dbPath, (err) => {
  if (err) {
    console.error('Erreur de connexion √† la base de donn√©es:', err.message);
    return;
  }
  console.log('‚úÖ Connect√© √† la base de donn√©es SQLite');
  
  // D√©sactiver temporairement les contraintes de cl√© √©trang√®re
  db.serialize(() => {
    db.run('PRAGMA foreign_keys = OFF;');
    
    // Supprimer les tables existantes (dans le bon ordre pour √©viter les erreurs de cl√© √©trang√®re)
    db.serialize(() => {
      // Supprimer les donn√©es existantes
      db.run('DELETE FROM ProjectBid;');
      db.run('DELETE FROM ProjectSkill;');
      db.run('DELETE FROM Project;');
      db.run('DELETE FROM ProjectCategory;');
      db.run('DELETE FROM users;');
      
      console.log('üßπ Donn√©es existantes supprim√©es');
      
      // Ins√©rer des cat√©gories
      db.run(`
        INSERT INTO ProjectCategory (id, name, description) 
        VALUES 
          ('cat1', 'D√©veloppement Web', 'Sites web, applications web et services en ligne'),
          ('cat2', 'Design Graphique', 'Logos, identit√© visuelle, illustrations'),
          ('cat3', 'R√©daction', 'Articles, traductions, r√©√©criture'),
          ('cat4', 'Marketing Digital', 'SEO, publicit√© en ligne, r√©seaux sociaux');
      `, function(err) {
        if (err) {
          console.error('Erreur lors de l\'insertion des cat√©gories:', err);
          return;
        }
        console.log(`üìù ${this.changes} cat√©gories ins√©r√©es`);
        
        // Ins√©rer des utilisateurs
        const now = new Date().toISOString();
        db.run(`
          INSERT INTO users (id, name, email, email_verified, image, created_at, updated_at)
          VALUES 
            ('user1', 'Client Entreprise', 'client1@example.com', '${now}', 'https://randomuser.me/api/portraits/men/1.jpg', '${now}', '${now}'),
            ('user2', 'D√©veloppeur Full Stack', 'dev@example.com', '${now}', 'https://randomuser.me/api/portraits/men/3.jpg', '${now}', '${now}');
        `, function(err) {
          if (err) {
            console.error('Erreur lors de l\'insertion des utilisateurs:', err);
            return;
          }
          console.log(`üë• ${this.changes} utilisateurs ins√©r√©s`);
          
          // Ins√©rer un projet
          const deadline = new Date();
          deadline.setDate(deadline.getDate() + 30);
          
          db.run(`
            INSERT INTO Project (id, title, description, budget, deadline, status, clientId, categoryId, createdAt, updatedAt)
            VALUES (
              'proj1',
              'Site vitrine pour restaurant',
              'Cr√©ation d\\''un site vitrine moderne pour un restaurant avec menu en ligne et formulaire de r√©servation.',
              1500,
              '${deadline.toISOString()}',
              'OPEN',
              'user1',
              'cat1',
              '${now}',
              '${now}'
            );
          `, function(err) {
            if (err) {
              console.error('Erreur lors de l\'insertion du projet:', err);
              return;
            }
            console.log(`üöÄ Projet ins√©r√© avec succ√®s`);
            
            // Ins√©rer des comp√©tences pour le projet
            db.run(`
              INSERT INTO ProjectSkill (id, name, projectId)
              VALUES 
                ('skill1', 'React', 'proj1'),
                ('skill2', 'Next.js', 'proj1'),
                ('skill3', 'Tailwind CSS', 'proj1');
            `, function(err) {
              if (err) {
                console.error('Erreur lors de l\'insertion des comp√©tences:', err);
                return;
              }
              console.log(`üéØ Comp√©tences ajout√©es au projet`);
              
              // Ins√©rer une offre pour le projet
              db.run(`
                INSERT INTO ProjectBid (id, amount, proposal, status, projectId, freelancerId, createdAt, updatedAt)
                VALUES (
                  'bid1',
                  1200,
                  'Je suis int√©ress√© par votre projet et je propose de le r√©aliser pour 1200‚Ç¨.',
                  'PENDING',
                  'proj1',
                  'user2',
                  '${now}',
                  '${now}'
                );
              `, function(err) {
                if (err) {
                  console.error('Erreur lors de l\'insertion de l\'offre:', err);
                  return;
                }
                console.log('üíº Offre ajout√©e avec succ√®s');
                console.log('\n‚úÖ Base de donn√©es peupl√©e avec succ√®s !');
                
                // R√©activer les contraintes de cl√© √©trang√®re
                db.run('PRAGMA foreign_keys = ON;');
                
                // Fermer la connexion
                db.close();
              });
            });
          });
        });
      });
    });
  });
});
